{
  "_args": [
    [
      {
        "raw": "crc-32@~1.1.0",
        "scope": null,
        "escapedName": "crc-32",
        "name": "crc-32",
        "rawSpec": "~1.1.0",
        "spec": ">=1.1.0 <1.2.0",
        "type": "range"
      },
      "E:\\codes\\Web\\CV-manager-app\\node_modules\\xlsx"
    ]
  ],
  "_from": "crc-32@>=1.1.0 <1.2.0",
  "_id": "crc-32@1.1.0",
  "_inCache": true,
  "_location": "/crc-32",
  "_nodeVersion": "8.2.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/crc-32-1.1.0.tgz_1501228133311_0.17897338210605085"
  },
  "_npmUser": {
    "name": "sheetjs",
    "email": "dev@sheetjs.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "crc-32@~1.1.0",
    "scope": null,
    "escapedName": "crc-32",
    "name": "crc-32",
    "rawSpec": "~1.1.0",
    "spec": ">=1.1.0 <1.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/xlsx"
  ],
  "_resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.1.0.tgz",
  "_shasum": "301ef4a1c2217adc8463b6e6e96c4e44310e10c7",
  "_shrinkwrap": null,
  "_spec": "crc-32@~1.1.0",
  "_where": "E:\\codes\\Web\\CV-manager-app\\node_modules\\xlsx",
  "author": {
    "name": "sheetjs"
  },
  "bin": {
    "crc32": "./bin/crc32.njs"
  },
  "bugs": {
    "url": "https://github.com/SheetJS/js-crc32/issues"
  },
  "config": {
    "blanket": {
      "pattern": "crc32.js"
    }
  },
  "dependencies": {
    "exit-on-epipe": "~1.0.1",
    "printj": "~1.1.0"
  },
  "description": "Pure-JS CRC-32",
  "devDependencies": {
    "codepage": "~1.10.0",
    "mocha": "~2.5.3"
  },
  "directories": {},
  "dist": {
    "shasum": "301ef4a1c2217adc8463b6e6e96c4e44310e10c7",
    "tarball": "https://registry.npmjs.org/crc-32/-/crc-32-1.1.0.tgz"
  },
  "engines": {
    "node": ">=0.8"
  },
  "files": [
    "crc32.js",
    "bin/crc32.njs",
    "LICENSE",
    "README.md"
  ],
  "homepage": "https://github.com/SheetJS/js-crc32#readme",
  "keywords": [
    "crc32",
    "checksum",
    "crc"
  ],
  "license": "Apache-2.0",
  "main": "./crc32",
  "maintainers": [
    {
      "name": "sheetjs",
      "email": "dev@sheetjs.com"
    }
  ],
  "name": "crc-32",
  "optionalDependencies": {},
  "readme": "# crc32\n\nStandard CRC-32 algorithm implementation in JS (for the browser and nodejs).\nEmphasis on correctness, performance, and IE6+ support.\n\n## Installation\n\nWith [npm](https://www.npmjs.org/package/crc-32):\n\n```bash\n$ npm install crc-32\n```\n\nIn the browser:\n\n```html\n<script src=\"crc32.js\"></script>\n```\n\nThe browser exposes a variable `CRC32`.\n\nWhen installed globally, npm installs a script `crc32` that computes the\nchecksum for a specified file or standard input.\n\nThe script will manipulate `module.exports` if available (e.g. in a CommonJS\n`require` context).  This is not always desirable.  To prevent the behavior,\ndefine `DO_NOT_EXPORT_CRC`.\n\n## Usage\n\nIn all cases, the relevant function takes an argument representing data and an\noptional second argument representing the starting \"seed\" (for rolling CRC).\n\nThe return value is a signed 32-bit integer.\n\n- `CRC32.buf(byte array or buffer[, seed])` assumes the argument is a sequence\n  of 8-bit unsigned integers (e.g. nodejs `Buffer` or simple array of ints).\n\n- `CRC32.bstr(binary string[, seed])` assumes the argument is a \"binary\" string\n  where byte `i` is the low byte of the UCS-2 char: `str.charCodeAt(i) & 0xFF`\n\n- `CRC32.str(string[, seed])` assumes the argument is a standard string and\n  calculates the CRC32 of the UTF-8 encoding.\n\nFor example:\n\n```js\n// var CRC32 = require('crc-32');             // uncomment this line if in node\nCRC32.str(\"SheetJS\")                          // -1647298270\nCRC32.bstr(\"SheetJS\")                         // -1647298270\nCRC32.buf([ 83, 104, 101, 101, 116, 74, 83 ]) // -1647298270\n\ncrc32 = CRC32.buf([83, 104])                  // -1826163454  \"Sh\"\ncrc32 = CRC32.str(\"eet\", crc32)               //  1191034598  \"Sheet\"\nCRC32.bstr(\"JS\", crc32)                       // -1647298270  \"SheetJS\"\n\n[CRC32.str(\"\\u2603\"),  CRC32.str(\"\\u0003\")]   // [ -1743909036,  1259060791 ]\n[CRC32.bstr(\"\\u2603\"), CRC32.bstr(\"\\u0003\")]  // [  1259060791,  1259060791 ]\n[CRC32.buf([0x2603]),  CRC32.buf([0x0003])]   // [  1259060791,  1259060791 ]\n```\n\n## Testing\n\n`make test` will run the nodejs-based test.\n\nTo run the in-browser tests, run a local server and go to the `ctest` directory.\n`make ctestserv` will start a python `SimpleHTTPServer` server on port 8000.\n\nTo update the browser artifacts, run `make ctest`.\n\nTo generate the bits file, use the `crc32` function from python zlib:\n\n```python\n>>> from zlib import crc32\n>>> x=\"foo bar baz٪☃🍣\"\n>>> crc32(x)\n1531648243\n>>> crc32(x+x)\n-218791105\n>>> crc32(x+x+x)\n1834240887\n```\n\nThe included `crc32.njs` script can process files or stdin:\n\n```bash\n$ echo \"this is a test\" > t.txt\n$ bin/crc32.njs t.txt\n1912935186\n```\n\nFor comparison, the included `crc32.py` script uses python zlib:\n\n```bash\n$ bin/crc32.py t.txt\n1912935186\n```\n\nOn OSX the command `cksum` generates unsigned CRC-32 with Algorithm 3:\n\n```bash\n$ cksum -o 3 < IE8.Win7.For.Windows.VMware.zip\n1891069052 4161613172\n$ crc32 --unsigned ~/Downloads/IE8.Win7.For.Windows.VMware.zip\n1891069052\n```\n\n## Performance\n\n`make perf` will run algorithmic performance tests (which should justify certain\ndecisions in the code).\n\n[js-adler32](http://git.io/adler32) has more performance notes\n\n## License\n\nPlease consult the attached LICENSE file for details.  All rights not explicitly\ngranted by the Apache 2.0 license are reserved by the Original Author.\n\n## Badges\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/crc32.svg)](https://saucelabs.com/u/crc32)\n\n[![Build Status](https://travis-ci.org/SheetJS/js-crc32.svg?branch=master)](https://travis-ci.org/SheetJS/js-crc32)\n\n[![Coverage Status](http://img.shields.io/coveralls/SheetJS/js-crc32/master.svg)](https://coveralls.io/r/SheetJS/js-crc32?branch=master)\n\n[![Analytics](https://ga-beacon.appspot.com/UA-36810333-1/SheetJS/js-crc32?pixel)](https://github.com/SheetJS/js-crc32)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/SheetJS/js-crc32.git"
  },
  "scripts": {
    "pretest": "git submodule init && git submodule update",
    "test": "make test"
  },
  "version": "1.1.0"
}
